[2020-01-06T17:42:55.055Z] [org.springframework.boot.logging.DeferredLog] [restartedMain] [225] [INFO ] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2020-01-06T17:42:56.056Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [249] [INFO ] Fetching config from server at : http://localhost:8888
[2020-01-06T17:42:58.058Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [273] [INFO ] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
[2020-01-06T17:42:58.058Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [152] [WARN ] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/Zuul-Proxy-Server/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
[2020-01-06T17:42:58.058Z] [org.springframework.boot.SpringApplication] [restartedMain] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-01-06T17:42:59.059Z] [org.springframework.boot.actuate.endpoint.EndpointId] [restartedMain] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-01-06T17:42:59.059Z] [org.springframework.boot.actuate.endpoint.EndpointId] [restartedMain] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-01-06T17:43:00.000Z] [org.springframework.cloud.context.scope.GenericScope] [restartedMain] [295] [INFO ] BeanFactory id=d7c878c7-8ef1-34b1-b9de-5b34b62b3a03
[2020-01-06T17:43:01.001Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [92] [INFO ] Tomcat initialized with port(s): 4444 (http)
[2020-01-06T17:43:01.001Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing ProtocolHandler ["http-nio-4444"]
[2020-01-06T17:43:01.001Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting service [Tomcat]
[2020-01-06T17:43:01.001Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.29]
[2020-01-06T17:43:01.001Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-01-06T17:43:01.001Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [restartedMain] [284] [INFO ] Root WebApplicationContext: initialization completed in 2534 ms
[2020-01-06T17:43:01.001Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-01-06T17:43:01.001Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-01-06T17:43:01.001Z] [com.netflix.config.DynamicPropertyFactory] [restartedMain] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@159c244a
[2020-01-06T17:43:03.003Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-01-06T17:43:03.003Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-01-06T17:43:03.003Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [restartedMain] [171] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-01-06T17:43:04.004Z] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2020-01-06T17:43:05.005Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [restartedMain] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-01-06T17:43:06.006Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [restartedMain] [67] [INFO ] Starting filter initializer
[2020-01-06T17:43:06.006Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [restartedMain] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-01-06T17:43:06.006Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [restartedMain] [72] [INFO ] Setting initial instance status as: STARTING
[2020-01-06T17:43:06.006Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [365] [INFO ] Initializing Eureka in region us-east-1
[2020-01-06T17:43:06.006Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-01-06T17:43:06.006Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-01-06T17:43:06.006Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-01-06T17:43:06.006Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-01-06T17:43:07.007Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [restartedMain] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-01-06T17:43:07.007Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [976] [INFO ] Disable delta property : false
[2020-01-06T17:43:07.007Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [977] [INFO ] Single vip registry refresh property : null
[2020-01-06T17:43:07.007Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [978] [INFO ] Force full registry fetch : false
[2020-01-06T17:43:07.007Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [979] [INFO ] Application is null : false
[2020-01-06T17:43:07.007Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [980] [INFO ] Registered Applications size is zero : true
[2020-01-06T17:43:07.007Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [982] [INFO ] Application version is -1: true
[2020-01-06T17:43:07.007Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1065] [INFO ] Getting all instance registry info from the eureka server
[2020-01-06T17:43:08.008Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1074] [INFO ] The response status is 200
[2020-01-06T17:43:08.008Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1288] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-01-06T17:43:08.008Z] [com.netflix.discovery.InstanceInfoReplicator] [restartedMain] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-01-06T17:43:08.008Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [465] [INFO ] Discovery Client initialized at timestamp 1578312788013 with initial instances count: 2
[2020-01-06T17:43:08.008Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [restartedMain] [41] [INFO ] Registering application ZUUL-PROXY-SERVER with eureka with status UP
[2020-01-06T17:43:08.008Z] [com.netflix.discovery.DiscoveryClient$3] [restartedMain] [1323] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1578312788029, current=UP, previous=STARTING]
[2020-01-06T17:43:08.008Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [844] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444: registering service...
[2020-01-06T17:43:08.008Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting ProtocolHandler ["http-nio-4444"]
[2020-01-06T17:43:08.008Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [204] [INFO ] Tomcat started on port(s): 4444 (http) with context path ''
[2020-01-06T17:43:08.008Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [restartedMain] [145] [INFO ] Updating port to 4444
[2020-01-06T17:43:08.008Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [853] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - registration status: 204
[2020-01-06T17:43:09.009Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [61] [INFO ] Started ZuulProxyServerApplication in 15.346 seconds (JVM running for 17.041)
[2020-01-06T17:48:07.007Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-01-06T17:49:42.042Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-4444-exec-1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-01-06T17:49:42.042Z] [org.springframework.web.servlet.FrameworkServlet] [http-nio-4444-exec-1] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-01-06T17:49:42.042Z] [org.springframework.web.servlet.FrameworkServlet] [http-nio-4444-exec-1] [547] [INFO ] Completed initialization in 14 ms
[2020-01-06T17:49:43.043Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-1] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T17:49:43.043Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [http-nio-4444-exec-1] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-CALLDETAIL-SERVICE
[2020-01-06T17:49:43.043Z] [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-4444-exec-1] [197] [INFO ] Client: CALLDETAIL-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CALLDETAIL-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-01-06T17:49:43.043Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-1] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-01-06T17:49:43.043Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-1] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T17:49:43.043Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-1] [150] [INFO ] DynamicServerListLoadBalancer for client CALLDETAIL-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CALLDETAIL-SERVICE,current list of Servers=[localhost:8400],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8400;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@790eccd1
[2020-01-06T17:49:44.044Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T17:50:23.023Z] [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] [RMI TCP Connection(18)-127.0.0.1] [159] [INFO ] Application shutdown requested.
[2020-01-06T17:50:23.023Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [RMI TCP Connection(18)-127.0.0.1] [65] [INFO ] Unregistering application ZUUL-PROXY-SERVER with eureka with status DOWN
[2020-01-06T17:50:23.023Z] [com.netflix.discovery.DiscoveryClient$3] [RMI TCP Connection(18)-127.0.0.1] [1321] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1578313223201, current=DOWN, previous=UP]
[2020-01-06T17:50:23.023Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [844] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444: registering service...
[2020-01-06T17:50:23.023Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [RMI TCP Connection(18)-127.0.0.1] [79] [INFO ] Stopping filter initializer
[2020-01-06T17:50:23.023Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [RMI TCP Connection(18)-127.0.0.1] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-CALLDETAIL-SERVICE
[2020-01-06T17:50:23.023Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [RMI TCP Connection(18)-127.0.0.1] [208] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-01-06T17:50:23.023Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [853] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - registration status: 204
[2020-01-06T17:50:23.023Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(18)-127.0.0.1] [906] [INFO ] Shutting down DiscoveryClient ...
[2020-01-06T17:50:26.026Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(18)-127.0.0.1] [940] [INFO ] Unregistering ...
[2020-01-06T17:50:26.026Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(18)-127.0.0.1] [942] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - deregister  status: 200
[2020-01-06T17:50:26.026Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(18)-127.0.0.1] [929] [INFO ] Completed shut down of DiscoveryClient
[2020-01-06T17:50:26.026Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(18)-127.0.0.1] [173] [INFO ] Pausing ProtocolHandler ["http-nio-4444"]
[2020-01-06T17:50:26.026Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(18)-127.0.0.1] [173] [INFO ] Stopping service [Tomcat]
[2020-01-06T17:50:26.026Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(18)-127.0.0.1] [173] [INFO ] Destroying Spring FrameworkServlet 'dispatcherServlet'
[2020-01-06T17:50:26.026Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(18)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T17:50:26.026Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(18)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [expiringMap-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T17:50:26.026Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(18)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [PollingServerListUpdater-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T17:50:26.026Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(18)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [DataPublisher] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T17:50:26.026Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(18)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [RxComputationScheduler-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T17:50:26.026Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(18)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [PollingServerListUpdater-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T17:50:26.026Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(18)-127.0.0.1] [173] [INFO ] Stopping ProtocolHandler ["http-nio-4444"]
[2020-01-06T17:50:27.027Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(18)-127.0.0.1] [173] [INFO ] Destroying ProtocolHandler ["http-nio-4444"]
[2020-01-06T17:50:27.027Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-21] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
[2020-01-06T17:54:57.057Z] [org.springframework.boot.logging.DeferredLog] [restartedMain] [225] [INFO ] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2020-01-06T17:54:58.058Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [249] [INFO ] Fetching config from server at : http://localhost:8888
[2020-01-06T17:55:00.000Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [273] [INFO ] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
[2020-01-06T17:55:00.000Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [152] [WARN ] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/Zuul-Proxy-Server/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
[2020-01-06T17:55:00.000Z] [org.springframework.boot.SpringApplication] [restartedMain] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-01-06T17:55:02.002Z] [org.springframework.boot.actuate.endpoint.EndpointId] [restartedMain] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-01-06T17:55:02.002Z] [org.springframework.boot.actuate.endpoint.EndpointId] [restartedMain] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-01-06T17:55:02.002Z] [org.springframework.cloud.context.scope.GenericScope] [restartedMain] [295] [INFO ] BeanFactory id=d7c878c7-8ef1-34b1-b9de-5b34b62b3a03
[2020-01-06T17:55:03.003Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [92] [INFO ] Tomcat initialized with port(s): 4444 (http)
[2020-01-06T17:55:03.003Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing ProtocolHandler ["http-nio-4444"]
[2020-01-06T17:55:03.003Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting service [Tomcat]
[2020-01-06T17:55:03.003Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.29]
[2020-01-06T17:55:04.004Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-01-06T17:55:04.004Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [restartedMain] [284] [INFO ] Root WebApplicationContext: initialization completed in 3141 ms
[2020-01-06T17:55:04.004Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-01-06T17:55:04.004Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-01-06T17:55:04.004Z] [com.netflix.config.DynamicPropertyFactory] [restartedMain] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6ad40cde
[2020-01-06T17:55:06.006Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-01-06T17:55:06.006Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-01-06T17:55:07.007Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [restartedMain] [171] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-01-06T17:55:07.007Z] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2020-01-06T17:55:08.008Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [restartedMain] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-01-06T17:55:09.009Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [restartedMain] [67] [INFO ] Starting filter initializer
[2020-01-06T17:55:09.009Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [restartedMain] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-01-06T17:55:09.009Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [restartedMain] [72] [INFO ] Setting initial instance status as: STARTING
[2020-01-06T17:55:09.009Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [365] [INFO ] Initializing Eureka in region us-east-1
[2020-01-06T17:55:10.010Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-01-06T17:55:10.010Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-01-06T17:55:10.010Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-01-06T17:55:10.010Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-01-06T17:55:10.010Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [restartedMain] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-01-06T17:55:11.011Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [976] [INFO ] Disable delta property : false
[2020-01-06T17:55:11.011Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [977] [INFO ] Single vip registry refresh property : null
[2020-01-06T17:55:11.011Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [978] [INFO ] Force full registry fetch : false
[2020-01-06T17:55:11.011Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [979] [INFO ] Application is null : false
[2020-01-06T17:55:11.011Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [980] [INFO ] Registered Applications size is zero : true
[2020-01-06T17:55:11.011Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [982] [INFO ] Application version is -1: true
[2020-01-06T17:55:11.011Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1065] [INFO ] Getting all instance registry info from the eureka server
[2020-01-06T17:55:11.011Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1074] [INFO ] The response status is 200
[2020-01-06T17:55:11.011Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1288] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-01-06T17:55:11.011Z] [com.netflix.discovery.InstanceInfoReplicator] [restartedMain] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-01-06T17:55:11.011Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [465] [INFO ] Discovery Client initialized at timestamp 1578313511369 with initial instances count: 2
[2020-01-06T17:55:11.011Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [restartedMain] [41] [INFO ] Registering application ZUUL-PROXY-SERVER with eureka with status UP
[2020-01-06T17:55:11.011Z] [com.netflix.discovery.DiscoveryClient$3] [restartedMain] [1323] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1578313511377, current=UP, previous=STARTING]
[2020-01-06T17:55:11.011Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [844] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444: registering service...
[2020-01-06T17:55:11.011Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting ProtocolHandler ["http-nio-4444"]
[2020-01-06T17:55:11.011Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [853] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - registration status: 204
[2020-01-06T17:55:11.011Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [204] [INFO ] Tomcat started on port(s): 4444 (http) with context path ''
[2020-01-06T17:55:11.011Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [restartedMain] [145] [INFO ] Updating port to 4444
[2020-01-06T17:55:12.012Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [61] [INFO ] Started ZuulProxyServerApplication in 16.984 seconds (JVM running for 21.306)
[2020-01-06T17:55:37.037Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-4444-exec-1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-01-06T17:55:37.037Z] [org.springframework.web.servlet.FrameworkServlet] [http-nio-4444-exec-1] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-01-06T17:55:37.037Z] [org.springframework.web.servlet.FrameworkServlet] [http-nio-4444-exec-1] [547] [INFO ] Completed initialization in 20 ms
[2020-01-06T17:55:59.059Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-5] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T17:55:59.059Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [http-nio-4444-exec-5] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-CALLDETAIL-SERVICE
[2020-01-06T17:55:59.059Z] [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-4444-exec-5] [197] [INFO ] Client: CALLDETAIL-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CALLDETAIL-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-01-06T17:55:59.059Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-5] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-01-06T17:55:59.059Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-5] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T17:55:59.059Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-5] [150] [INFO ] DynamicServerListLoadBalancer for client CALLDETAIL-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CALLDETAIL-SERVICE,current list of Servers=[localhost:8400],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8400;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3488da32
[2020-01-06T17:56:00.000Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T17:57:07.007Z] [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] [RMI TCP Connection(9)-127.0.0.1] [159] [INFO ] Application shutdown requested.
[2020-01-06T17:57:07.007Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [RMI TCP Connection(9)-127.0.0.1] [65] [INFO ] Unregistering application ZUUL-PROXY-SERVER with eureka with status DOWN
[2020-01-06T17:57:07.007Z] [com.netflix.discovery.DiscoveryClient$3] [RMI TCP Connection(9)-127.0.0.1] [1321] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1578313627712, current=DOWN, previous=UP]
[2020-01-06T17:57:07.007Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [844] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444: registering service...
[2020-01-06T17:57:07.007Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [RMI TCP Connection(9)-127.0.0.1] [79] [INFO ] Stopping filter initializer
[2020-01-06T17:57:07.007Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [RMI TCP Connection(9)-127.0.0.1] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-CALLDETAIL-SERVICE
[2020-01-06T17:57:07.007Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [RMI TCP Connection(9)-127.0.0.1] [208] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-01-06T17:57:07.007Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(9)-127.0.0.1] [906] [INFO ] Shutting down DiscoveryClient ...
[2020-01-06T17:57:07.007Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [853] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - registration status: 204
[2020-01-06T17:57:07.007Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(9)-127.0.0.1] [940] [INFO ] Unregistering ...
[2020-01-06T17:57:07.007Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(9)-127.0.0.1] [942] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - deregister  status: 200
[2020-01-06T17:57:07.007Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(9)-127.0.0.1] [929] [INFO ] Completed shut down of DiscoveryClient
[2020-01-06T17:57:07.007Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(9)-127.0.0.1] [173] [INFO ] Pausing ProtocolHandler ["http-nio-4444"]
[2020-01-06T17:57:08.008Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(9)-127.0.0.1] [173] [INFO ] Stopping service [Tomcat]
[2020-01-06T17:57:08.008Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(9)-127.0.0.1] [173] [INFO ] Destroying Spring FrameworkServlet 'dispatcherServlet'
[2020-01-06T17:57:08.008Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(9)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T17:57:08.008Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(9)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [expiringMap-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T17:57:08.008Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(9)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [PollingServerListUpdater-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T17:57:08.008Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(9)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [DataPublisher] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T17:57:08.008Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(9)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [RxComputationScheduler-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T17:57:08.008Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(9)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [PollingServerListUpdater-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T17:57:08.008Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(9)-127.0.0.1] [173] [INFO ] Stopping ProtocolHandler ["http-nio-4444"]
[2020-01-06T17:57:08.008Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(9)-127.0.0.1] [173] [INFO ] Destroying ProtocolHandler ["http-nio-4444"]
[2020-01-06T17:57:08.008Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-21] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
[2020-01-06T18:10:34.034Z] [org.springframework.boot.logging.DeferredLog] [restartedMain] [225] [INFO ] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2020-01-06T18:10:36.036Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [249] [INFO ] Fetching config from server at : http://localhost:8888
[2020-01-06T18:10:38.038Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [273] [INFO ] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
[2020-01-06T18:10:38.038Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [152] [WARN ] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/Zuul-Proxy-Server/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
[2020-01-06T18:10:38.038Z] [org.springframework.boot.SpringApplication] [restartedMain] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-01-06T18:10:39.039Z] [org.springframework.boot.actuate.endpoint.EndpointId] [restartedMain] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-01-06T18:10:39.039Z] [org.springframework.boot.actuate.endpoint.EndpointId] [restartedMain] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-01-06T18:10:39.039Z] [org.springframework.cloud.context.scope.GenericScope] [restartedMain] [295] [INFO ] BeanFactory id=d7c878c7-8ef1-34b1-b9de-5b34b62b3a03
[2020-01-06T18:10:40.040Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [92] [INFO ] Tomcat initialized with port(s): 4444 (http)
[2020-01-06T18:10:40.040Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing ProtocolHandler ["http-nio-4444"]
[2020-01-06T18:10:40.040Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting service [Tomcat]
[2020-01-06T18:10:40.040Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.29]
[2020-01-06T18:10:40.040Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-01-06T18:10:40.040Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [restartedMain] [284] [INFO ] Root WebApplicationContext: initialization completed in 2572 ms
[2020-01-06T18:10:40.040Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-01-06T18:10:40.040Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-01-06T18:10:40.040Z] [com.netflix.config.DynamicPropertyFactory] [restartedMain] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5d39c5b8
[2020-01-06T18:10:43.043Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-01-06T18:10:43.043Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-01-06T18:10:43.043Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [restartedMain] [171] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-01-06T18:10:44.044Z] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2020-01-06T18:10:45.045Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [restartedMain] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-01-06T18:10:45.045Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [restartedMain] [67] [INFO ] Starting filter initializer
[2020-01-06T18:10:45.045Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [restartedMain] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-01-06T18:10:46.046Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [restartedMain] [72] [INFO ] Setting initial instance status as: STARTING
[2020-01-06T18:10:46.046Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(3)-127.0.0.1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-01-06T18:10:46.046Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-01-06T18:10:46.046Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [365] [INFO ] Initializing Eureka in region us-east-1
[2020-01-06T18:10:46.046Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [547] [INFO ] Completed initialization in 16 ms
[2020-01-06T18:10:46.046Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-01-06T18:10:46.046Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-01-06T18:10:46.046Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-01-06T18:10:46.046Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-01-06T18:10:46.046Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [restartedMain] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-01-06T18:10:47.047Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [976] [INFO ] Disable delta property : false
[2020-01-06T18:10:47.047Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [977] [INFO ] Single vip registry refresh property : null
[2020-01-06T18:10:47.047Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [978] [INFO ] Force full registry fetch : false
[2020-01-06T18:10:47.047Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [979] [INFO ] Application is null : false
[2020-01-06T18:10:47.047Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [980] [INFO ] Registered Applications size is zero : true
[2020-01-06T18:10:47.047Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [982] [INFO ] Application version is -1: true
[2020-01-06T18:10:47.047Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1065] [INFO ] Getting all instance registry info from the eureka server
[2020-01-06T18:10:47.047Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1074] [INFO ] The response status is 200
[2020-01-06T18:10:47.047Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1288] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-01-06T18:10:47.047Z] [com.netflix.discovery.InstanceInfoReplicator] [restartedMain] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-01-06T18:10:47.047Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [465] [INFO ] Discovery Client initialized at timestamp 1578314447474 with initial instances count: 0
[2020-01-06T18:10:47.047Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [restartedMain] [41] [INFO ] Registering application ZUUL-PROXY-SERVER with eureka with status UP
[2020-01-06T18:10:47.047Z] [com.netflix.discovery.DiscoveryClient$3] [restartedMain] [1323] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1578314447474, current=UP, previous=STARTING]
[2020-01-06T18:10:47.047Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [844] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444: registering service...
[2020-01-06T18:10:47.047Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting ProtocolHandler ["http-nio-4444"]
[2020-01-06T18:10:47.047Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [204] [INFO ] Tomcat started on port(s): 4444 (http) with context path ''
[2020-01-06T18:10:47.047Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [restartedMain] [145] [INFO ] Updating port to 4444
[2020-01-06T18:10:47.047Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [853] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - registration status: 204
[2020-01-06T18:10:48.048Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [61] [INFO ] Started ZuulProxyServerApplication in 15.353 seconds (JVM running for 17.136)
[2020-01-06T18:11:17.017Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [976] [INFO ] Disable delta property : false
[2020-01-06T18:11:17.017Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [977] [INFO ] Single vip registry refresh property : null
[2020-01-06T18:11:17.017Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [978] [INFO ] Force full registry fetch : false
[2020-01-06T18:11:17.017Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [979] [INFO ] Application is null : false
[2020-01-06T18:11:17.017Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [980] [INFO ] Registered Applications size is zero : true
[2020-01-06T18:11:17.017Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [982] [INFO ] Application version is -1: false
[2020-01-06T18:11:17.017Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1065] [INFO ] Getting all instance registry info from the eureka server
[2020-01-06T18:11:17.017Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1074] [INFO ] The response status is 200
[2020-01-06T18:11:56.056Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-1] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T18:11:56.056Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [http-nio-4444-exec-1] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-CALLDETAIL-SERVICE
[2020-01-06T18:11:56.056Z] [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-4444-exec-1] [197] [INFO ] Client: CALLDETAIL-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CALLDETAIL-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-01-06T18:11:56.056Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-1] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-01-06T18:11:56.056Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-1] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T18:11:56.056Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-1] [150] [INFO ] DynamicServerListLoadBalancer for client CALLDETAIL-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CALLDETAIL-SERVICE,current list of Servers=[localhost:8400],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8400;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@664e24e1
[2020-01-06T18:11:57.057Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T18:12:21.021Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [Thread-11] [65] [INFO ] Unregistering application ZUUL-PROXY-SERVER with eureka with status DOWN
[2020-01-06T18:12:21.021Z] [com.netflix.discovery.DiscoveryClient$3] [Thread-11] [1321] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1578314541206, current=DOWN, previous=UP]
[2020-01-06T18:12:21.021Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [844] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444: registering service...
[2020-01-06T18:12:21.021Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [Thread-11] [79] [INFO ] Stopping filter initializer
[2020-01-06T18:12:21.021Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [Thread-11] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-CALLDETAIL-SERVICE
[2020-01-06T18:12:21.021Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [Thread-11] [208] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-01-06T18:12:21.021Z] [com.netflix.discovery.DiscoveryClient] [Thread-11] [906] [INFO ] Shutting down DiscoveryClient ...
[2020-01-06T18:12:21.021Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [853] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - registration status: 204
[2020-01-06T18:12:21.021Z] [com.netflix.discovery.DiscoveryClient] [Thread-11] [940] [INFO ] Unregistering ...
[2020-01-06T18:12:21.021Z] [com.netflix.discovery.DiscoveryClient] [Thread-11] [942] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - deregister  status: 200
[2020-01-06T18:12:21.021Z] [com.netflix.discovery.DiscoveryClient] [Thread-11] [929] [INFO ] Completed shut down of DiscoveryClient
[2020-01-06T18:12:23.023Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [249] [INFO ] Fetching config from server at : http://localhost:8888
[2020-01-06T18:12:25.025Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [273] [INFO ] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
[2020-01-06T18:12:25.025Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [152] [WARN ] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/Zuul-Proxy-Server/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
[2020-01-06T18:12:25.025Z] [org.springframework.boot.SpringApplication] [restartedMain] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-01-06T18:12:26.026Z] [org.springframework.cloud.context.scope.GenericScope] [restartedMain] [295] [INFO ] BeanFactory id=d7c878c7-8ef1-34b1-b9de-5b34b62b3a03
[2020-01-06T18:12:26.026Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [WARN ] The MBean registry cannot be disabled because it has already been initialised
[2020-01-06T18:12:26.026Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [92] [INFO ] Tomcat initialized with port(s): 4444 (http)
[2020-01-06T18:12:26.026Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing ProtocolHandler ["http-nio-4444"]
[2020-01-06T18:12:26.026Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting service [Tomcat]
[2020-01-06T18:12:26.026Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.29]
[2020-01-06T18:12:26.026Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-01-06T18:12:26.026Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [restartedMain] [284] [INFO ] Root WebApplicationContext: initialization completed in 828 ms
[2020-01-06T18:12:26.026Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-01-06T18:12:26.026Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-01-06T18:12:26.026Z] [com.netflix.config.DynamicPropertyFactory] [restartedMain] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@31a37bc1
[2020-01-06T18:12:28.028Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-01-06T18:12:28.028Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-01-06T18:12:28.028Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [restartedMain] [171] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-01-06T18:12:28.028Z] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2020-01-06T18:12:29.029Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [restartedMain] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-01-06T18:12:29.029Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [restartedMain] [67] [INFO ] Starting filter initializer
[2020-01-06T18:12:29.029Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [restartedMain] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-01-06T18:12:29.029Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [restartedMain] [72] [INFO ] Setting initial instance status as: STARTING
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [365] [INFO ] Initializing Eureka in region us-east-1
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [restartedMain] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [976] [INFO ] Disable delta property : false
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [977] [INFO ] Single vip registry refresh property : null
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [978] [INFO ] Force full registry fetch : false
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [979] [INFO ] Application is null : false
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [980] [INFO ] Registered Applications size is zero : true
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [982] [INFO ] Application version is -1: true
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1065] [INFO ] Getting all instance registry info from the eureka server
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1074] [INFO ] The response status is 200
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1288] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.InstanceInfoReplicator] [restartedMain] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [465] [INFO ] Discovery Client initialized at timestamp 1578314549936 with initial instances count: 2
[2020-01-06T18:12:29.029Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [restartedMain] [41] [INFO ] Registering application ZUUL-PROXY-SERVER with eureka with status UP
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.DiscoveryClient$3] [restartedMain] [1323] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1578314549952, current=UP, previous=STARTING]
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [844] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444: registering service...
[2020-01-06T18:12:29.029Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [853] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - registration status: 204
[2020-01-06T18:12:29.029Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting ProtocolHandler ["http-nio-4444"]
[2020-01-06T18:12:30.030Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [204] [INFO ] Tomcat started on port(s): 4444 (http) with context path ''
[2020-01-06T18:12:30.030Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [restartedMain] [145] [INFO ] Updating port to 4444
[2020-01-06T18:12:30.030Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [61] [INFO ] Started ZuulProxyServerApplication in 8.689 seconds (JVM running for 119.497)
[2020-01-06T18:12:30.030Z] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [restartedMain] [63] [INFO ] Condition evaluation unchanged
[2020-01-06T18:12:31.031Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(3)-127.0.0.1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-01-06T18:12:31.031Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-01-06T18:12:31.031Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [547] [INFO ] Completed initialization in 16 ms
[2020-01-06T18:17:29.029Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-01-06T18:19:11.011Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-1] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T18:19:12.012Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [http-nio-4444-exec-1] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-CALLDETAIL-SERVICE
[2020-01-06T18:19:12.012Z] [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-4444-exec-1] [197] [INFO ] Client: CALLDETAIL-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CALLDETAIL-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-01-06T18:19:12.012Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-1] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-01-06T18:19:12.012Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-1] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T18:19:12.012Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-1] [150] [INFO ] DynamicServerListLoadBalancer for client CALLDETAIL-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CALLDETAIL-SERVICE,current list of Servers=[localhost:8400],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8400;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7567f165
[2020-01-06T18:19:13.013Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-1] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T18:21:17.017Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-3] [115] [INFO ] Flipping property: CUSTOMER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T18:21:18.018Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [http-nio-4444-exec-3] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-CUSTOMER-SERVICE
[2020-01-06T18:21:18.018Z] [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-4444-exec-3] [197] [INFO ] Client: CUSTOMER-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CUSTOMER-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-01-06T18:21:18.018Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-3] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-01-06T18:21:18.018Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-3] [150] [INFO ] DynamicServerListLoadBalancer for client CUSTOMER-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CUSTOMER-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@25e1546
[2020-01-06T18:21:20.020Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [http-nio-4444-exec-3] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: CUSTOMER-SERVICE
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167)
	... 55 common frames omitted
[2020-01-06T18:21:56.056Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [http-nio-4444-exec-4] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: CUSTOMER-SERVICE
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167)
	... 55 common frames omitted
[2020-01-06T18:22:08.008Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [http-nio-4444-exec-5] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: CUSTOMER-SERVICE
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167)
	... 55 common frames omitted
[2020-01-06T18:22:10.010Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [http-nio-4444-exec-6] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: CUSTOMER-SERVICE
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167)
	... 55 common frames omitted
[2020-01-06T18:22:12.012Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [http-nio-4444-exec-7] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: CUSTOMER-SERVICE
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167)
	... 55 common frames omitted
[2020-01-06T18:22:18.018Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [http-nio-4444-exec-8] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: CALLDETAIL-SERVICE
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167)
	... 55 common frames omitted
[2020-01-06T18:22:29.029Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-01-06T18:23:41.041Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [http-nio-4444-exec-9] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: CUSTOMER-SERVICE
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167)
	... 55 common frames omitted
[2020-01-06T18:24:03.003Z] [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] [RMI TCP Connection(29)-127.0.0.1] [159] [INFO ] Application shutdown requested.
[2020-01-06T18:24:03.003Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [RMI TCP Connection(29)-127.0.0.1] [65] [INFO ] Unregistering application ZUUL-PROXY-SERVER with eureka with status DOWN
[2020-01-06T18:24:03.003Z] [com.netflix.discovery.DiscoveryClient$3] [RMI TCP Connection(29)-127.0.0.1] [1321] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1578315243853, current=DOWN, previous=UP]
[2020-01-06T18:24:03.003Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [844] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444: registering service...
[2020-01-06T18:24:04.004Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [RMI TCP Connection(29)-127.0.0.1] [79] [INFO ] Stopping filter initializer
[2020-01-06T18:24:04.004Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [RMI TCP Connection(29)-127.0.0.1] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-CUSTOMER-SERVICE
[2020-01-06T18:24:05.005Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [853] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - registration status: 204
[2020-01-06T18:24:05.005Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [RMI TCP Connection(29)-127.0.0.1] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-CALLDETAIL-SERVICE
[2020-01-06T18:24:05.005Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [RMI TCP Connection(29)-127.0.0.1] [208] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-01-06T18:24:06.006Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(29)-127.0.0.1] [906] [INFO ] Shutting down DiscoveryClient ...
[2020-01-06T18:24:09.009Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(29)-127.0.0.1] [940] [INFO ] Unregistering ...
[2020-01-06T18:24:10.010Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(29)-127.0.0.1] [942] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - deregister  status: 200
[2020-01-06T18:24:10.010Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(29)-127.0.0.1] [929] [INFO ] Completed shut down of DiscoveryClient
[2020-01-06T18:24:11.011Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(29)-127.0.0.1] [173] [INFO ] Pausing ProtocolHandler ["http-nio-4444"]
[2020-01-06T18:24:12.012Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(29)-127.0.0.1] [173] [INFO ] Stopping service [Tomcat]
[2020-01-06T18:24:12.012Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(29)-127.0.0.1] [173] [INFO ] Destroying Spring FrameworkServlet 'dispatcherServlet'
[2020-01-06T18:24:13.013Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(29)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [RxComputationScheduler-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T18:24:13.013Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(29)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [RxComputationScheduler-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T18:24:13.013Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(29)-127.0.0.1] [173] [INFO ] Stopping ProtocolHandler ["http-nio-4444"]
[2020-01-06T18:24:14.014Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(29)-127.0.0.1] [173] [INFO ] Destroying ProtocolHandler ["http-nio-4444"]
[2020-01-06T18:24:14.014Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-22] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
[2020-01-06T18:24:47.047Z] [org.springframework.boot.logging.DeferredLog] [restartedMain] [225] [INFO ] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2020-01-06T18:24:50.050Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [249] [INFO ] Fetching config from server at : http://localhost:8888
[2020-01-06T18:24:53.053Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [273] [INFO ] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
[2020-01-06T18:24:53.053Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [152] [WARN ] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/Zuul-Proxy-Server/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
[2020-01-06T18:24:53.053Z] [org.springframework.boot.SpringApplication] [restartedMain] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-01-06T18:24:55.055Z] [org.springframework.boot.actuate.endpoint.EndpointId] [restartedMain] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-01-06T18:24:55.055Z] [org.springframework.boot.actuate.endpoint.EndpointId] [restartedMain] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-01-06T18:24:55.055Z] [org.springframework.cloud.context.scope.GenericScope] [restartedMain] [295] [INFO ] BeanFactory id=d7c878c7-8ef1-34b1-b9de-5b34b62b3a03
[2020-01-06T18:24:58.058Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [92] [INFO ] Tomcat initialized with port(s): 4444 (http)
[2020-01-06T18:24:58.058Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing ProtocolHandler ["http-nio-4444"]
[2020-01-06T18:24:58.058Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting service [Tomcat]
[2020-01-06T18:24:58.058Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.29]
[2020-01-06T18:24:58.058Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-01-06T18:24:58.058Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [restartedMain] [284] [INFO ] Root WebApplicationContext: initialization completed in 5097 ms
[2020-01-06T18:24:58.058Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-01-06T18:24:58.058Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-01-06T18:24:58.058Z] [com.netflix.config.DynamicPropertyFactory] [restartedMain] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@55a7c7e
[2020-01-06T18:25:03.003Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-01-06T18:25:03.003Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-01-06T18:25:04.004Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [restartedMain] [171] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-01-06T18:25:05.005Z] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2020-01-06T18:25:06.006Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [restartedMain] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-01-06T18:25:09.009Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [restartedMain] [67] [INFO ] Starting filter initializer
[2020-01-06T18:25:09.009Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [restartedMain] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-01-06T18:25:09.009Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [restartedMain] [72] [INFO ] Setting initial instance status as: STARTING
[2020-01-06T18:25:09.009Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [365] [INFO ] Initializing Eureka in region us-east-1
[2020-01-06T18:25:10.010Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-01-06T18:25:10.010Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-01-06T18:25:11.011Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-01-06T18:25:11.011Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-01-06T18:25:11.011Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [restartedMain] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-01-06T18:25:12.012Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [976] [INFO ] Disable delta property : false
[2020-01-06T18:25:12.012Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [977] [INFO ] Single vip registry refresh property : null
[2020-01-06T18:25:12.012Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [978] [INFO ] Force full registry fetch : false
[2020-01-06T18:25:12.012Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [979] [INFO ] Application is null : false
[2020-01-06T18:25:12.012Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [980] [INFO ] Registered Applications size is zero : true
[2020-01-06T18:25:12.012Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [982] [INFO ] Application version is -1: true
[2020-01-06T18:25:12.012Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1065] [INFO ] Getting all instance registry info from the eureka server
[2020-01-06T18:25:13.013Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1074] [INFO ] The response status is 200
[2020-01-06T18:25:13.013Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1288] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-01-06T18:25:13.013Z] [com.netflix.discovery.InstanceInfoReplicator] [restartedMain] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-01-06T18:25:13.013Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [465] [INFO ] Discovery Client initialized at timestamp 1578315313284 with initial instances count: 1
[2020-01-06T18:25:13.013Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [restartedMain] [41] [INFO ] Registering application ZUUL-PROXY-SERVER with eureka with status UP
[2020-01-06T18:25:13.013Z] [com.netflix.discovery.DiscoveryClient$3] [restartedMain] [1323] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1578315313393, current=UP, previous=STARTING]
[2020-01-06T18:25:13.013Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [844] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444: registering service...
[2020-01-06T18:25:13.013Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting ProtocolHandler ["http-nio-4444"]
[2020-01-06T18:25:13.013Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [853] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - registration status: 204
[2020-01-06T18:25:14.014Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [204] [INFO ] Tomcat started on port(s): 4444 (http) with context path ''
[2020-01-06T18:25:14.014Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [restartedMain] [145] [INFO ] Updating port to 4444
[2020-01-06T18:25:15.015Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [61] [INFO ] Started ZuulProxyServerApplication in 29.956 seconds (JVM running for 35.026)
[2020-01-06T18:30:13.013Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-01-06T18:30:16.016Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-4444-exec-2] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-01-06T18:30:16.016Z] [org.springframework.web.servlet.FrameworkServlet] [http-nio-4444-exec-2] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-01-06T18:30:16.016Z] [org.springframework.web.servlet.FrameworkServlet] [http-nio-4444-exec-2] [547] [INFO ] Completed initialization in 0 ms
[2020-01-06T18:30:19.019Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-2] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T18:30:19.019Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [http-nio-4444-exec-2] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-CALLDETAIL-SERVICE
[2020-01-06T18:30:19.019Z] [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-4444-exec-2] [197] [INFO ] Client: CALLDETAIL-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CALLDETAIL-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-01-06T18:30:20.020Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-2] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-01-06T18:30:21.021Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-2] [150] [INFO ] DynamicServerListLoadBalancer for client CALLDETAIL-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CALLDETAIL-SERVICE,current list of Servers=[localhost:8400],Load balancer stats=Zone stats: {},Server stats: [[Server:localhost:8400;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6db042d7
[2020-01-06T18:30:21.021Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T18:30:32.032Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [http-nio-4444-exec-2] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: 
	at org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter.findZuulException(SendErrorFilter.java:118)
	at org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter.run(SendErrorFilter.java:78)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.error(FilterProcessor.java:105)
	at com.netflix.zuul.ZuulRunner.error(ZuulRunner.java:112)
	at com.netflix.zuul.http.ZuulServlet.error(ZuulServlet.java:145)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:83)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
[2020-01-06T18:34:09.009Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [http-nio-4444-exec-4] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.netflix.hystrix.exception.HystrixRuntimeException: CALLDETAIL-SERVICE timed-out and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:822)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$1.run(AbstractCommand.java:1142)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1.call(HystrixContextRunnable.java:41)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1.call(HystrixContextRunnable.java:37)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run(HystrixContextRunnable.java:57)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$2.tick(AbstractCommand.java:1159)
	at com.netflix.hystrix.util.HystrixTimer$1.run(HystrixTimer.java:99)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	... 1 common frames omitted
Caused by: java.util.concurrent.TimeoutException: null
	at com.netflix.hystrix.AbstractCommand.handleTimeoutViaFallback(AbstractCommand.java:997)
	at com.netflix.hystrix.AbstractCommand.access$500(AbstractCommand.java:60)
	at com.netflix.hystrix.AbstractCommand$12.call(AbstractCommand.java:609)
	at com.netflix.hystrix.AbstractCommand$12.call(AbstractCommand.java:601)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	... 15 common frames omitted
[2020-01-06T19:07:21.021Z] [org.springframework.boot.logging.DeferredLog] [restartedMain] [225] [INFO ] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2020-01-06T19:07:22.022Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [249] [INFO ] Fetching config from server at : http://localhost:8888
[2020-01-06T19:07:25.025Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [273] [INFO ] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
[2020-01-06T19:07:25.025Z] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] [restartedMain] [152] [WARN ] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/Zuul-Proxy-Server/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
[2020-01-06T19:07:25.025Z] [org.springframework.boot.SpringApplication] [restartedMain] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-01-06T19:07:26.026Z] [org.springframework.boot.actuate.endpoint.EndpointId] [restartedMain] [155] [WARN ] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2020-01-06T19:07:26.026Z] [org.springframework.boot.actuate.endpoint.EndpointId] [restartedMain] [155] [WARN ] Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2020-01-06T19:07:26.026Z] [org.springframework.cloud.context.scope.GenericScope] [restartedMain] [295] [INFO ] BeanFactory id=d7c878c7-8ef1-34b1-b9de-5b34b62b3a03
[2020-01-06T19:07:28.028Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [92] [INFO ] Tomcat initialized with port(s): 4444 (http)
[2020-01-06T19:07:28.028Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing ProtocolHandler ["http-nio-4444"]
[2020-01-06T19:07:28.028Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting service [Tomcat]
[2020-01-06T19:07:28.028Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.29]
[2020-01-06T19:07:28.028Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2020-01-06T19:07:28.028Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [restartedMain] [284] [INFO ] Root WebApplicationContext: initialization completed in 3662 ms
[2020-01-06T19:07:28.028Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-01-06T19:07:28.028Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-01-06T19:07:28.028Z] [com.netflix.config.DynamicPropertyFactory] [restartedMain] [281] [INFO ] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@403d5184
[2020-01-06T19:07:32.032Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [121] [WARN ] No URLs will be polled as dynamic configuration sources.
[2020-01-06T19:07:32.032Z] [com.netflix.config.sources.URLConfigurationSource] [restartedMain] [122] [INFO ] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2020-01-06T19:07:33.033Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [restartedMain] [171] [INFO ] Initializing ExecutorService 'applicationTaskExecutor'
[2020-01-06T19:07:33.033Z] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2020-01-06T19:07:34.034Z] [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] [restartedMain] [86] [WARN ] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2020-01-06T19:07:35.035Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [restartedMain] [67] [INFO ] Starting filter initializer
[2020-01-06T19:07:35.035Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [restartedMain] [58] [INFO ] Exposing 2 endpoint(s) beneath base path '/actuator'
[2020-01-06T19:07:35.035Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [restartedMain] [72] [INFO ] Setting initial instance status as: STARTING
[2020-01-06T19:07:35.035Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [365] [INFO ] Initializing Eureka in region us-east-1
[2020-01-06T19:07:35.035Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2020-01-06T19:07:35.035Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2020-01-06T19:07:36.036Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2020-01-06T19:07:36.036Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2020-01-06T19:07:36.036Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [restartedMain] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-01-06T19:07:36.036Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [976] [INFO ] Disable delta property : false
[2020-01-06T19:07:36.036Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [977] [INFO ] Single vip registry refresh property : null
[2020-01-06T19:07:36.036Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [978] [INFO ] Force full registry fetch : false
[2020-01-06T19:07:36.036Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [979] [INFO ] Application is null : false
[2020-01-06T19:07:36.036Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [980] [INFO ] Registered Applications size is zero : true
[2020-01-06T19:07:36.036Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [982] [INFO ] Application version is -1: true
[2020-01-06T19:07:36.036Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1065] [INFO ] Getting all instance registry info from the eureka server
[2020-01-06T19:07:37.037Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1074] [INFO ] The response status is 200
[2020-01-06T19:07:37.037Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1288] [INFO ] Starting heartbeat executor: renew interval is: 30
[2020-01-06T19:07:37.037Z] [com.netflix.discovery.InstanceInfoReplicator] [restartedMain] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2020-01-06T19:07:37.037Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [465] [INFO ] Discovery Client initialized at timestamp 1578317857420 with initial instances count: 0
[2020-01-06T19:07:37.037Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [restartedMain] [41] [INFO ] Registering application ZUUL-PROXY-SERVER with eureka with status UP
[2020-01-06T19:07:37.037Z] [com.netflix.discovery.DiscoveryClient$3] [restartedMain] [1323] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1578317857420, current=UP, previous=STARTING]
[2020-01-06T19:07:37.037Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [844] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444: registering service...
[2020-01-06T19:07:37.037Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting ProtocolHandler ["http-nio-4444"]
[2020-01-06T19:07:37.037Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [204] [INFO ] Tomcat started on port(s): 4444 (http) with context path ''
[2020-01-06T19:07:37.037Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [restartedMain] [145] [INFO ] Updating port to 4444
[2020-01-06T19:07:37.037Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [853] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - registration status: 204
[2020-01-06T19:07:38.038Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [61] [INFO ] Started ZuulProxyServerApplication in 18.576 seconds (JVM running for 20.423)
[2020-01-06T19:08:07.007Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [976] [INFO ] Disable delta property : false
[2020-01-06T19:08:07.007Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [977] [INFO ] Single vip registry refresh property : null
[2020-01-06T19:08:07.007Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [978] [INFO ] Force full registry fetch : false
[2020-01-06T19:08:07.007Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [979] [INFO ] Application is null : false
[2020-01-06T19:08:07.007Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [980] [INFO ] Registered Applications size is zero : true
[2020-01-06T19:08:07.007Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [982] [INFO ] Application version is -1: false
[2020-01-06T19:08:07.007Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1065] [INFO ] Getting all instance registry info from the eureka server
[2020-01-06T19:08:07.007Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1074] [INFO ] The response status is 200
[2020-01-06T19:10:14.014Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-4444-exec-10] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2020-01-06T19:10:14.014Z] [org.springframework.web.servlet.FrameworkServlet] [http-nio-4444-exec-10] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2020-01-06T19:10:14.014Z] [org.springframework.web.servlet.FrameworkServlet] [http-nio-4444-exec-10] [547] [INFO ] Completed initialization in 6 ms
[2020-01-06T19:10:14.014Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-10] [115] [INFO ] Flipping property: CUSTOMER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T19:10:14.014Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [http-nio-4444-exec-10] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-CUSTOMER-SERVICE
[2020-01-06T19:10:14.014Z] [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-4444-exec-10] [197] [INFO ] Client: CUSTOMER-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CUSTOMER-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-01-06T19:10:14.014Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-10] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-01-06T19:10:14.014Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-10] [150] [INFO ] DynamicServerListLoadBalancer for client CUSTOMER-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CUSTOMER-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5b50394c
[2020-01-06T19:10:14.014Z] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] [http-nio-4444-exec-10] [84] [WARN ] Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: CUSTOMER-SERVICE
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:221)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:55)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:167)
	... 55 common frames omitted
[2020-01-06T19:12:37.037Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-01-06T19:17:37.037Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-01-06T19:22:14.014Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-9] [115] [INFO ] Flipping property: FRIENDFAMILIY-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T19:22:14.014Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [http-nio-4444-exec-9] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-FRIENDFAMILIY-SERVICE
[2020-01-06T19:22:14.014Z] [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-4444-exec-9] [197] [INFO ] Client: FRIENDFAMILIY-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=FRIENDFAMILIY-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-01-06T19:22:14.014Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-9] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-01-06T19:22:14.014Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-9] [115] [INFO ] Flipping property: FRIENDFAMILIY-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T19:22:14.014Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-9] [150] [INFO ] DynamicServerListLoadBalancer for client FRIENDFAMILIY-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=FRIENDFAMILIY-SERVICE,current list of Servers=[localhost:8600],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8600;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@31857090
[2020-01-06T19:22:15.015Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: FRIENDFAMILIY-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T19:22:37.037Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-01-06T19:24:58.058Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-7] [115] [INFO ] Flipping property: PLAN-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T19:24:58.058Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [http-nio-4444-exec-7] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-PLAN-SERVICE
[2020-01-06T19:24:58.058Z] [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-4444-exec-7] [197] [INFO ] Client: PLAN-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=PLAN-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-01-06T19:24:58.058Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-7] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-01-06T19:24:58.058Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-7] [115] [INFO ] Flipping property: PLAN-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T19:24:58.058Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-7] [150] [INFO ] DynamicServerListLoadBalancer for client PLAN-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=PLAN-SERVICE,current list of Servers=[localhost:8800],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8800;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1506872
[2020-01-06T19:24:59.059Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-0] [115] [INFO ] Flipping property: PLAN-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T19:27:37.037Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2020-01-06T19:31:10.010Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-4] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T19:31:10.010Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [http-nio-4444-exec-4] [58] [INFO ] Shutdown hook installed for: NFLoadBalancer-PingTimer-CALLDETAIL-SERVICE
[2020-01-06T19:31:10.010Z] [com.netflix.loadbalancer.BaseLoadBalancer] [http-nio-4444-exec-4] [197] [INFO ] Client: CALLDETAIL-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CALLDETAIL-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2020-01-06T19:31:10.010Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-4] [222] [INFO ] Using serverListUpdater PollingServerListUpdater
[2020-01-06T19:31:10.010Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [http-nio-4444-exec-4] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T19:31:10.010Z] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] [http-nio-4444-exec-4] [150] [INFO ] DynamicServerListLoadBalancer for client CALLDETAIL-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=CALLDETAIL-SERVICE,current list of Servers=[localhost:8400],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8400;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3e0c4e0b
[2020-01-06T19:31:11.011Z] [com.netflix.config.ChainedDynamicProperty$ChainLink] [PollingServerListUpdater-1] [115] [INFO ] Flipping property: CALLDETAIL-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2020-01-06T19:31:46.046Z] [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] [RMI TCP Connection(42)-127.0.0.1] [159] [INFO ] Application shutdown requested.
[2020-01-06T19:31:46.046Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [RMI TCP Connection(42)-127.0.0.1] [65] [INFO ] Unregistering application ZUUL-PROXY-SERVER with eureka with status DOWN
[2020-01-06T19:31:46.046Z] [com.netflix.discovery.DiscoveryClient$3] [RMI TCP Connection(42)-127.0.0.1] [1321] [WARN ] Saw local status change event StatusChangeEvent [timestamp=1578319306628, current=DOWN, previous=UP]
[2020-01-06T19:31:46.046Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [844] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444: registering service...
[2020-01-06T19:31:46.046Z] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] [RMI TCP Connection(42)-127.0.0.1] [79] [INFO ] Stopping filter initializer
[2020-01-06T19:31:46.046Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [RMI TCP Connection(42)-127.0.0.1] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-CUSTOMER-SERVICE
[2020-01-06T19:31:46.046Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [853] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - registration status: 204
[2020-01-06T19:31:46.046Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [RMI TCP Connection(42)-127.0.0.1] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-FRIENDFAMILIY-SERVICE
[2020-01-06T19:31:47.047Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [RMI TCP Connection(42)-127.0.0.1] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-CALLDETAIL-SERVICE
[2020-01-06T19:31:47.047Z] [com.netflix.util.concurrent.ShutdownEnabledTimer] [RMI TCP Connection(42)-127.0.0.1] [67] [INFO ] Shutdown hook removed for: NFLoadBalancer-PingTimer-PLAN-SERVICE
[2020-01-06T19:31:47.047Z] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport] [RMI TCP Connection(42)-127.0.0.1] [208] [INFO ] Shutting down ExecutorService 'applicationTaskExecutor'
[2020-01-06T19:31:47.047Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(42)-127.0.0.1] [906] [INFO ] Shutting down DiscoveryClient ...
[2020-01-06T19:31:50.050Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(42)-127.0.0.1] [940] [INFO ] Unregistering ...
[2020-01-06T19:31:50.050Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(42)-127.0.0.1] [942] [INFO ] DiscoveryClient_ZUUL-PROXY-SERVER/host.docker.internal:Zuul-Proxy-Server:4444 - deregister  status: 200
[2020-01-06T19:31:50.050Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(42)-127.0.0.1] [929] [INFO ] Completed shut down of DiscoveryClient
[2020-01-06T19:31:50.050Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(42)-127.0.0.1] [173] [INFO ] Pausing ProtocolHandler ["http-nio-4444"]
[2020-01-06T19:31:51.051Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(42)-127.0.0.1] [173] [INFO ] Stopping service [Tomcat]
[2020-01-06T19:31:51.051Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(42)-127.0.0.1] [173] [INFO ] Destroying Spring FrameworkServlet 'dispatcherServlet'
[2020-01-06T19:31:51.051Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(42)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T19:31:51.051Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(42)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [expiringMap-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T19:31:51.051Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(42)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [PollingServerListUpdater-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T19:31:51.051Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(42)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [RxComputationScheduler-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T19:31:51.051Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(42)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [PollingServerListUpdater-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T19:31:51.051Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(42)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [DataPublisher] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T19:31:51.051Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(42)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [RxComputationScheduler-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T19:31:51.051Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(42)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [RxComputationScheduler-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T19:31:51.051Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(42)-127.0.0.1] [173] [WARN ] The web application [ROOT] appears to have started a thread named [RxComputationScheduler-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
[2020-01-06T19:31:52.052Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(42)-127.0.0.1] [173] [INFO ] Stopping ProtocolHandler ["http-nio-4444"]
[2020-01-06T19:31:52.052Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(42)-127.0.0.1] [173] [INFO ] Destroying ProtocolHandler ["http-nio-4444"]
[2020-01-06T19:31:52.052Z] [com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2] [Thread-21] [53] [INFO ] Shutting down the Executor Pool for PollingServerListUpdater
